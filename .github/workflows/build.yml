name: build

on: [push, workflow_dispatch]

jobs:
  lint:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ['14']

    steps:
    - name: Git checkout
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Print NPM Config
      run: npm config ls -l

    - name: Install
      run: npm install --audit false

    - name: Install magicpatch
      run: npm install -g magicpatch

    - name: Security Audit
      run: npm audit --omit=dev --audit-level=high
      env:
        NODE_ENV: production
      continue-on-error: true

    - name: List Modules
      run: npm ls
      continue-on-error: true

    - name: Lint
      run: gulp lint

  test:

    needs: lint

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        node-version: [14.x, 16.x]

    steps:
    - name: Git checkout
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache Node Modules
      id: cache-node-modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: node-modules-${{ hashFiles('package-lock.json') }}

    - name: Install
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm install

    - name: Install magicpatch
      run: npm install -g magicpatch

    - name: Test
      run: npm test

  docs:
    needs: test

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ['14']

    steps:
    - name: Git checkout
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache Node Modules
      id: cache-node-modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: node-modules-${{ hashFiles('package-lock.json') }}

    - name: Install
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm install

    - name: Create Docs
      run: npm run docs

    - name: Publish Docs
      uses: JamesIves/github-pages-deploy-action@3.7.1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: gh-pages
        FOLDER: docs
        CLEAN: true


  coverage:
    needs: test

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ['14']

    steps:
    - name: Git checkout
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache Node Modules
      id: cache-node-modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: node-modules-${{ hashFiles('package-lock.json') }}

    - name: Install
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm install

    - name: Install magicpatch
      run: npm install -g magicpatch

    - name: Create Coverage
      run: npm run coverage

    - name: Publish Coverage
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

